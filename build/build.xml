<?xml version="1.0"?>
<!--
	Joomla! Akeeba Release System build file for Phing
	written by Nicholas K. Dionysopoulos
	
	Run "phing svn" from the build directory to build everything except the docs
-->
<project name="AkeebaReleaseSystem" description="Akeeba Release System" default="svn" >
	<property file="./build.properties" />
	<!-- Default properties, set only if not already assigned in the build.properties file -->
	<property name="dirs.root" value=".." />
	<property name="dirs.component" value="../component" />
	<property name="dirs.languages" value="../component/translation" />
	<property name="dirs.modules" value="../modules" />
	<property name="dirs.plugins" value="../plugins" />
	<property name="dirs.release" value="../release" />
	<property name="version" value="svn" />
	
	<property name="dirs.bin" value="bin" />
	<property name="dirs.bin.libxml" value="${dirs.bin}/libxml" />
	<property name="dirs.bin.fop" value="${dirs.bin}/fop" />
	<property name="dirs.bin.dbxsl" value="${dirs.bin}/dbxsl" />
	<property name="dirs.bin.release" value="../release" />
	<property name="dirs.documentation" value="../documentation" />	

	<taskdef name="zipme" classname="phingext.ZipmeTask" />
	<taskdef name="svnversion" classname="phingext.SvnVersionTask" />
	<taskdef name="docexport" classname="phingext.DocexportTask" />	

	<!--
	====================================================================================================
	File sets
	====================================================================================================
	-->
	
	<fileset dir="${dirs.component}" id="ars">
		<include name="backend/**" />
		<include name="fof/**" />
		<include name="frontend/**" />
		<include name="language/**" />
		<include name="media/**" />
		<include name="strapper/**" />
		<include name="LICENSE.txt" />
		<include name="README.php" />
		<include name="ars.xml" />
		<include name="script.ars.php" />
	</fileset>
	
	<!--
	====================================================================================================
	Tasks - General
	====================================================================================================
	-->
	
	<target name="svn" description="Makes everything except the documentation"
		depends="new-release,setup-properties,component-package">
	</target>
	
	<target name="all" description="Makes everything"
		depends="svn,documentation">
	</target>

	<target name="documentation" description="Creates the documentation packages"
		depends="doc-j-pdf,doc-j-import">
	</target>	

	<target name="new-release" description="Empty the release directory">
		<!-- Recreate the release directory -->
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir="${dirs.release}">
				<include name="**" />
				<exclude name=".svn/**" />
			</fileset>
		</delete>
		<mkdir dir="${dirs.release}" />
	</target>
	
	<target name="setup-properties" description="Set up version and build properties">
		<!-- Initialize the build.date timestamp -->
		<tstamp>
			<format property="build.date" pattern="%Y-%m-%d" />
		</tstamp>

		<!-- Initialize the version if it's not set -->
		<if>
			<equals arg1="${version}" arg2="svn" />
			<then>
				<svnversion workingcopy="${dirs.root}" propertyname="svn.lastrevision" />
				<property name="version" value="svn${svn.lastrevision}" override="true" />
			</then>
		</if>
	</target>

	<!--
	====================================================================================================
	Tasks - Joomla! packages
	====================================================================================================
	-->
	
	<target name="component-package" description="Component package build"
		depends="new-release,setup-properties">
		<!-- Create the package -->
		<copy file="./templates/ars.xml" tofile="${dirs.component}/ars.xml" overwrite="true">
			<filterchain id="standard-tokens">
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>
		
		<zipme basedir="${dirs.component}" destfile="${dirs.release}/com_ars-${version}.zip" includeemptydirs="true">
			<fileset refid="ars" />
		</zipme>
		<zipme basedir="${dirs.modules}" prefix="modules/" destfile="${dirs.release}/com_ars-${version}.zip" includeemptydirs="true">
			<fileset dir="${dirs.modules}">
				<include name="**" />
			</fileset>
		</zipme>
		<zipme basedir="${dirs.plugins}" prefix="plugins/" destfile="${dirs.release}/com_ars-${version}.zip" includeemptydirs="true">
			<fileset dir="${dirs.plugins}">
				<include name="**" />
				<exclude name="ars/tainting/**" />
			</fileset>
		</zipme>
	</target>
	
	<!--
	====================================================================================================
	Tasks - Documentation
	====================================================================================================
	-->
	
	<target name="doc-j-pdf" description="Documentation for Joomla! in PDF format">
		<exec command="xsltproc --nonet --xinclude --novalid --stringparam img.src.path ${dirs.documentation}/arsguide/ --stringparam body.start.indent 0 --stringparam variablelist.term.break.after 1 --stringparam variablelist.term.separator &quot;&quot; --stringparam variablelist.max.termlength 12 --stringparam section.autolabel 1 --stringparam toc.section.depth 5 --stringparam fop1.extensions 1 --output ${dirs.bin.release}/arsguide.fo ${dirs.bin.dbxsl}/fo/docbook.xsl ${dirs.documentation}/arsguide/ars-users-guide.xml" dir="${project.basedir}" />
		<exec command="fop -fo ${dirs.bin.release}/arsguide.fo -pdf ${dirs.bin.release}/ars-users-guide.pdf" logoutput="true" />
		<delete file="${dirs.release}arsguide.fo" quiet="yes" />
	</target>

	<target name="doc-j-import" description="Documentation for Joomla! in DocImport format">
		<docexport
			version="${version}"
			outdir="${dirs.release}"
			xslstyleroot="${dirs.bin.dbxsl}"
			title="Akeeba Backup User's Guide"
			docbookfile="${dirs.documentation}/arsguide/ars-users-guide.xml"
			imagedir="images"
			docbookimages="images"
			package="ars-users-guide"
		/>
	</target>
	
	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

	<target name="lang" description="Generate and upload language files">
		<exec command="php ./buildlang.php" dir="buildlang" passthru="true" />
	</target>

	<target name="ftpdeploy" depends="svn">
		<svnversion workingcopy="${dirs.root}" propertyname="svn.lastrevision" />
		<!-- Core release -->
		<echo>Uploading ARS nightly build</echo>
		<ftpdeploy
			host="${ftp.host}"
			port="${ftp.port}"
			username="${ftp.username}"
			password="${ftp.password}"
			dir="${ftp.dir}/ars/svn${svn.lastrevision}"
			mode="${ftp.mode}"
			passive="true"
			level="debug">
			<fileset dir="${dirs.root}">
				<include name="CHANGELOG"/>
			</fileset>			
			<fileset dir="${dirs.release}">
				<include name="com_ars*.zip"/>
			</fileset>			
		</ftpdeploy>
	</target>
	
	<target name="docsdeploy">
		<!-- English manual -->
		<echo>Uploading Akeeba Release System documentation</echo>
		<ftpdeploy
			host="${ftp.host}"
			port="${ftp.port}"
			username="${ftp.username}"
			password="${ftp.password}"
			dir="${ftp.dir.docs}/arsdocumentation"
			mode="${ftp.mode}"
			passive="true"
			level="debug">
			<fileset dir="${dirs.documentation}/arsguide">
				<include name="*.xml"/>
			</fileset>			
		</ftpdeploy>
	</target>
	
	<target name="lang" description="Generate and upload language files">
		<exec command="php ./buildlang.php" dir="buildlang" passthru="true" />
	</target>
</project>
